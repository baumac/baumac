---
- name: Set up cluster-wide configuration.
  hosts: cluster
  gather_facts: false
  become: true

  handlers:
    - name: reboot-pi
      ansible.builtin.reboot:

  tasks:
    - name: Set quieter PoE Hat fan profiles.
      ansible.builtin.blockinfile:
        path: /boot/config.txt
        block: |
          # PoE Hat Fan Speeds
          dtoverlay=rpi-poe   
          dtparam=poe_fan_temp0=50000   
          dtparam=poe_fan_temp0_hyst=1000   
          dtparam=poe_fan_temp1=60000
          dtparam=poe_fan_temp1_hyst=2500
          dtparam=poe_fan_temp2=70000
          dtparam=poe_fan_temp2_hyst=5000
          dtparam=poe_fan_temp3=80000
          dtparam=poe_fan_temp3_hyst=5000
      notify: reboot-pi

    - name: Ensure cgroups are configured correctly in cmdline.txt.
      ansible.builtin.replace:
        path: /boot/cmdline.txt
        regexp: '^([\w](?!.*\b{{ item }}\b).*)$'
        replace: '\1 {{ item }}'
      with_items:
        - "cgroup_memory=1"
        - "cgroup_enable=memory"
      notify: reboot-pi

    - name: Download K3s install script.
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: "~/k3s_install.sh"
        mode: a+x

- name: Configure the control plane.
  hosts: control_plane
  gather_facts: true
  become: true

  tasks:
    - name: Download K3s install script.
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: "~/k3s_install.sh"
        mode: a+x
    - name: Install K3s on control plane (takes a while).
      ansible.builtin.shell: >-
        K3S_KUBECONFIG_MODE="644"
        ~/k3s_install.sh >> ~/k3s_install_log.txt
      args:
        chdir: "~"
        creates: /var/lib/rancher/k3s/server/node-token

    - name: Get node token.
      ansible.builtin.command: cat /var/lib/rancher/k3s/server/node-token
      changed_when: false
      register: node_token_output

    - name: Set node_token fact.
      ansible.builtin.set_fact:
        node_token: "{{ node_token_output.stdout_lines[0] }}"

    - name: Set k3s_url fact.
      ansible.builtin.set_fact:
        k3s_url: "https{{':'}}//{{hostvars[groups['control_plane'][0]]['ansible_default_ipv4']['address']}}{{':'}}6443"

    - name: Ensure required dependencies are installed.
      ansible.builtin.package:
        name:
          - python3-pip
          - python3-setuptools
          - build-essential
          - golang
          - git
        state: present
        update_cache: true
      become: true

    - name: Ensure required Python libraries are installed.
      ansible.builtin.pip:
        name:
          - openshift
          - pyyaml
        state: present
      become: true

- name: Configure the worker nodes.
  hosts: nodes
  gather_facts: false
  become: true

  tasks:
    - name: Install K3s on nodes (takes a while). #In the K3s URL we have to use the control plane IP or the K3s agent fails to start
      ansible.builtin.shell: >-
        K3S_URL="{{ hostvars[groups['control_plane'][0]]['k3s_url'] }}"
        K3S_TOKEN="{{ hostvars[groups['control_plane'][0]]['node_token'] }}"
        ~/k3s_install.sh >> ~/k3s_install_log.txt
      args:
        chdir: "~"
        creates: /var/lib/rancher/k3s/agent/kubelet.kubeconfig

- name: Configure Kong Konnect.
  import_playbook: tasks/kubernetes/kong.yml
  tags: ['kong']

- name: Configure Argo CD.
  import_playbook: tasks/kubernetes/argo.yml
  tags: ['argo']
